@startuml Class Diagram 3
scale 2

skinparam linetype ortho

abstract class Person {
    #power : int {getter}

    #Person(...)
    +getPower() : int
}

class Ranger {
    -name : String
    -experience : int
    -efficiency : int

    +Ranger(...)
    +treatAnimal(animal : Animal) : void
    +fightPoacher(poacher : Poacher) : void
    +patrol(Habitat habitat, List<Poacher> poachers) : void
}

note left of Ranger::patrol
    patrol(habitat, poachers) {
        for (animal in habitat.getAnimals()) {
            if (animal.needsHelp()) {
                treatAnimal(animal)
            }
        }

        for (poacher in poachers) {
            if (poacher.habitat == habitat) {
                fightPoacher(poacher)
            }
        }
    }
end note

class Poacher {
    -target : String {getter, setter}
    -dangerLevel : int {getter, setter}
    -habitat : Habitat {getter, setter}
    -defeated : boolean {getter, setter}

    +Poacher(...)
    +invade(Habitat habitat) : void
}

note right of Poacher::invade
    invade(habitat) {
        this.habitat := habitat
        
        for (animal in habitat.getAnimals()) {
            animal.increaseStress(dangerLevel)

            if (animal.getSpecies() = target) {
                animal.decreaseStress(dangerLevel)
            }
        }
    }
end note

class Animal {
    -species : String {getter}
    -health : int {getter}
    -stressLevel : int {getter}

    +Animal(...)
    +increaseStress(int amount) : void
    +decreaseStress(int amount) : void
    +heal(int amount) : void
    +needsHelp() : boolean
}

note left of Animal::needsHelp
    needsHelp() {
        return health < 100 || stressLevel > 50
    }
end note

class Habitat {
    -name : String {getter}
    -capacity : int {getter}
    -animals : List<Animal>

    +Habitat(...)
    +addAnimal(animal : Animal) : boolean
    +removeAnimal(animal : Animal) : boolean
}

class Vehicle {
    -id : String {getter}
    -fuelLevel : int {getter}
    -capacity : int {getter}

    +Vehicle(...)
    +refuel(int amount) : void
    +deploy() : boolean
}

Ranger -down-|> Person
Ranger -- Habitat
Ranger -- Vehicle
Ranger -- Animal

Poacher -down-|> Person
Poacher -- Habitat 
Poacher -- Animal

Animal "0..*" --* Habitat

Person -[hidden]-> Ranger
Person -[hidden]-> Poacher
Ranger -[hidden]-> Habitat
Poacher -[hidden]-> Habitat
Habitat -[hidden]-> Animal
Ranger -[hidden]-> Vehicle

@enduml