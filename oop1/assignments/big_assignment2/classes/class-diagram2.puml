@startuml Class Diagram 2
scale 2

skinparam linetype ortho

class Ranger {
    ...
    -stressLevel : int {getter}

    +Ranger(...)
    +getStressLevel() : int
    +increaseStressLevel(int level) : void
    +decreaseStressLevel(int level) : void
}

note right of Ranger::increaseStressLevel
    increaseStressLevel(int level) {
        stressLevel += level
    }
end note

note right of Ranger::decreaseStressLevel
    decreaseStressLevel(int level) {
        stressLevel -= level
    }
end note

enum Temprament {
    PASSIVE
    DEFENSIVE
    AGGRESSIVE
    CURIOUS
}

enum State {
    CALM
    ALERTED
    DEFENSIVE
    CURIOUS
    AGGRESSIVE
    FLEEING
    ATTACKING
    STABILIZED
    CRITICAL
}

class Animal {
    -temperament : Temprament {getter, setter}
    -state : State {getter, setter}

    +Animal(...)
    +getTemperament() : Temprament
    +setTemperament(Temprament temperament) : void
}

note left of Animal::getTemperament
    getTemperament() {
        return temperament
    }
end note

note right of Animal::setTemperament
    setTemperament(Temprament temperament) {
        this.temperament := temperament
    }
end note

enum Equipment {
    TRANQUILIZER_KIT
    MEDICAL_KIT
}

class Vehicle {
    ...
    -equipments: Map<Equipment, int> {getter}

    +Vehicle(...)
    +getEquipments() : Map<Equipment, int>
    +hasEquipment(Equipment equipment) : boolean
    +addEquipment(Equipment equipment) : void
    +removeEquipment(Equipment equipment) : void
}

note left of Vehicle::addEquipment
    addEquipment(Equipment equipment) {
        if (equipments.containsKey(equipment)) {
            equipments.put(equipment, equipments.get(equipment) + 1)
        } else {
            equipments.put(equipment, 1)
        }
    }
end note

note right of Vehicle::removeEquipment
    removeEquipment(Equipment equipment) {
        if (equipments.containsKey(equipment)) {
            int count := equipments.get(equipment)
            if (count > 1) {
                equipments.put(equipment, count - 1)
            } else {
                equipments.remove(equipment)
            }
        }
    }
end note

Animal --- Temprament : <<uses>>
Animal --- State : <<uses>>

Vehicle --- Equipment : <<uses>>
Ranger --- Vehicle : <<uses>>

@enduml